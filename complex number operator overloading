#include<iostream>
using namespace std;
class Complex 
{
private:
double real;
double imag;
public:
Complex(double r=0.0,double i=0.0):real(r),imag(i) {}
Complex operator+(const Complex&c)const 
{
return Complex(real+c.real,imag+c.imag);
}
Complex operator-(const Complex&c)const 
{
return Complex(real-c.real,imag-c.imag);
}
Complex operator*(const Complex&c)const 
{
return Complex(real*c.real-imag*c.imag,real*c.imag+imag*c.real);
}
Complex operator/(const Complex &c)const 
{
double denominator=c.real*c.real+c.imag*c.imag;
if(denominator==0) 
{
cout<<"Error:Division by zero!"<<endl;
return Complex();
}
return Complex((real*c.real+imag*c.imag)/denominator,(imag*c.real-real*c.imag)/denominator);
}
ostream &operator<<(ostream &out,const Complex&c) 
{
out<<c.real;
if(c.imag>=0)
out<< "+";
out<< c.imag;
return out;
}
istream&operator>>(istream&in,Complex&c) 
{
cout<<"Enter real part:";
in>>c.real;
cout<<"Enter imaginary part:";
in>>c.imag;
return in;
}
};
int main() 
{
Complex c1, c2, result;
cout << "Enter first complex number:\n";
cin >> c1;
cout << "Enter second complex number:\n";
cin >> c2;
result=c1+c2;
cout <<"Sum:"<<result<<endl;
result = c1 - c2;cout << "Difference:"<<result << endl;
result= c1 * c2;
cout<<"Product: " << result << endl;
result=c1/c2;
cout <<"Quotient:"<< result << endl;
return 0;
}
